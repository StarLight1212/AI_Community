def bubble_sort(arr):
    """
    冒泡排序函数
    :param arr: 待排序的列表
    :return: 排序后的列表
    +---------------------+
    |   开始              |
    +---------------------+
              |
              v
    +---------------------+
    |   输入待排序列表    |
    +---------------------+
              |
              v
    +---------------------+
    |   获取列表长度 n   |
    +---------------------+
              |
              v
    +---------------------+
    |   外层循环 i 从 0 到 n-1 |
    +---------------------+
              |
              v
    +---------------------+
    |   内层循环 j 从 0 到 n-i-1 |
    +---------------------+
              |
              v
    +---------------------+
    |   如果 arr[j] > arr[j+1] |
    |       交换 arr[j] 和 arr[j+1] |
    +---------------------+
              |
              v
    +---------------------+
    |   返回排序后的列表  |
    +---------------------+
              |
              v
    +---------------------+
    |   结束              |
    +---------------------+
    """
    n = len(arr)  # 获取列表的长度
    # 外层循环控制排序的轮数
    for i in range(n):
        # 内层循环进行相邻元素的比较和交换
        for j in range(0, n - i - 1):
            # 如果当前元素大于下一个元素，则交换它们
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr  # 返回排序后的列表

# 测试冒泡排序
if __name__ == "__main__":
    sample_list = [64, 34, 25, 12, 22, 11, 90]  # 待排序的列表
    print("原始列表:", sample_list)
    sorted_list = bubble_sort(sample_list)  # 调用冒泡排序函数
    print("排序后的列表:", sorted_list)
