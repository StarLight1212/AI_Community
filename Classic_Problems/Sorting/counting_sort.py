def counting_sort(arr):
    """
    计数排序函数
    :param arr: 待排序的列表
    :return: 排序后的列表
    +---------------------+
    |   开始              |
    +---------------------+
              |
              v
    +---------------------+
    |   输入待排序列表    |
    +---------------------+
              |
              v
    +---------------------+
    |   如果列表为空      |
    |       返回空列表    |
    +---------------------+
              |
              v
    +---------------------+
    |   找到最大值 max_val |
    |   找到最小值 min_val |
    +---------------------+
              |
              v
    +---------------------+
    |   计算元素范围     |
    |   range_of_elements = max_val - min_val + 1 |
    +---------------------+
              |
              v
    +---------------------+
    |   创建计数数组 count |
    |   初始化为0         |
    +---------------------+
              |
              v
    +---------------------+
    |   统计每个元素出现次数 |
    |   for num in arr:   |
    |       count[num - min_val] += 1 |
    +---------------------+
              |
              v
    +---------------------+
    |   创建输出数组 output |
    +---------------------+
              |
              v
    +---------------------+
    |   根据计数数组填充输出数组 |
    |   output.extend([i + min_val] * count[i]) |
    +---------------------+
              |
              v
    +---------------------+
    |   返回排序后的列表  |
    +---------------------+
              |
              v
    +---------------------+
    |   结束              |
    +---------------------+
    """
    if len(arr) == 0:  # 如果列表为空，直接返回空列表
        return arr

    max_val = max(arr)  # 找到列表中的最大值
    min_val = min(arr)  # 找到列表中的最小值
    range_of_elements = max_val - min_val + 1  # 计算元素范围

    # 创建计数数组，初始化为0
    count = [0] * range_of_elements

    # 统计每个元素出现的次数
    for num in arr:
        count[num - min_val] += 1  # 将元素的值映射到计数数组的索引

    # 创建输出数组
    output = []
    for i in range(range_of_elements):
        output.extend([i + min_val] * count[i])  # 根据计数数组填充输出数组

    return output  # 返回排序后的列表

# 测试计数排序
if __name__ == "__main__":
    sample_list = [4, 2, 2, 8, 3, 3, 1]  # 待排序的列表
    print("原始列表:", sample_list)
    sorted_list = counting_sort(sample_list)  # 调用计数排序函数
    print("排序后的列表:", sorted_list)
